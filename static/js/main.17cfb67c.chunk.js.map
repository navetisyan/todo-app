{"version":3,"sources":["components/TodoForm.js","components/TodoList.js","components/SearchBar.js","components/Todo.js","App.js","index.js"],"names":["TodoForm","props","useState","value","input","setInput","className","onSubmit","e","preventDefault","id","Math","floor","random","text","isComplete","type","placeholder","name","onChange","target","TodoList","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","checked","onClick","SearchBar","term","setTerm","useEffect","handle","setTimeout","clearTimeout","Todo","items","setItems","queryItems","setQueryItems","item","trim","length","newList","foundItems","filter","includes","updatedItems","newValue","prev","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17cfb67c.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nfunction TodoForm(props) {\r\n\r\n    const [input, setInput] = useState(props.value ? props.value: '');\r\n    \r\n    const addTodoItem = (e) => {\r\n        e.preventDefault();    \r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 1000),\r\n            text: input, \r\n            isComplete: false\r\n        });\r\n        setInput('');\r\n    }\r\n\r\n    const handleChange = (e) => { \r\n        setInput(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"todo-form\" onSubmit={addTodoItem}>\r\n                <input \r\n                        type=\"text\"\r\n                        placeholder=\"Add Todo\" \r\n                        value={input} \r\n                        name='text' \r\n                        className=\"todo-input\"\r\n                        onChange={handleChange}/>\r\n                <button className=\"todo-button\">Add Todo</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\n\r\nfunction TodoList({todos, completeTodo, removeTodo, updateTodo}) {\r\n\r\n    const [edit, setEdit] = useState({id:null, value: ''});\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value);\r\n        setEdit({\r\n          id: null,\r\n          value: ''\r\n        });\r\n      };\r\n\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} value={edit.value} />;\r\n      }\r\n\r\n    return todos.map((todo, index) => (\r\n            <div key={index} className={todo.isComplete ? \"todo-row complete\": \"todo-row\"} >\r\n                    <div key={todo.id}  className =\"icon\">\r\n                        <input type=\"checkbox\" id={todo.id} name={todo.id} checked={todo.isComplete} onChange={() => completeTodo(todo.id)}/>\r\n                        {todo.text}\r\n                    </div>\r\n                    <div className=\"update-box\">\r\n                      <button className='update-icon icon' onClick={()=> setEdit({id: todo.id, value: todo.text }) }>Update</button>\r\n                      </div>\r\n                    <div className='remove-icon icon' onClick={()=> removeTodo(todo.id)}>x</div>\r\n                </div>\r\n                )\r\n            )\r\n}\r\n\r\nexport default TodoList;","import React, {useState, useEffect} from 'react'\r\n\r\nfunction SearchBar(props) {\r\n\r\n  const [term, setTerm] = useState('');\r\n\r\n  useEffect(()=> {\r\n\r\n    const handle = setTimeout(()=> {\r\n      props.onSubmit(term);\r\n    },2000);\r\n\r\n    return () => {\r\n      clearTimeout(handle);\r\n    }\r\n\r\n\r\n  }, [term]);\r\n\r\n\r\n    return (\r\n      <div className=\"search-form\">\r\n          <div className=\"field\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search in Todo list\" \r\n              onChange={(e) => setTerm(e.target.value)}\r\n            />\r\n          </div>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport TodoList from './TodoList'\r\nimport SearchBar from './SearchBar'\r\n\r\n\r\nexport default function Todo() {\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [queryItems, setQueryItems] =  useState(items);\r\n\r\n    const addItem = (item) => {\r\n        if(!item.text || !item.text.trim().length){\r\n            return;\r\n        }\r\n        const newList = [item, ...items];\r\n        setItems(newList);\r\n\r\n    }\r\n\r\n    const completeTodo = (id) => {\r\n        let updatedItems = items.map(item => {\r\n            if(item.id === id){\r\n                item.isComplete = !item.isComplete;\r\n            }\r\n            return item;\r\n        })\r\n\r\n        setItems(updatedItems);\r\n    }\r\n\r\n    const removeTodo = (id) => {\r\n        let updatedItems = [...items].filter(item => item.id !== id);\r\n        setItems(updatedItems);\r\n    }\r\n\r\n    const updateTodo = (id, newValue) => {\r\n        if(!newValue.text || !newValue.text.trim().length){\r\n            return;\r\n        }\r\n\r\n        setItems((prev) => prev.map( item => {return item.id === id ? newValue : item}));\r\n    }\r\n\r\n    const onSearchSubmit = (term) => {\r\n        let foundItems  = [...items].filter((item) => item.text.includes(term));   \r\n        setQueryItems(foundItems);\r\n      };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Todo Reminder</h1>\r\n             <div className=\"todo-row\"> {/*className=\"todo-menu\" */}\r\n                <TodoForm onSubmit = {addItem}/ >\r\n                <SearchBar onSubmit={onSearchSubmit}/>\r\n            </div>\r\n            <TodoList \r\n                    todos={queryItems.length ? queryItems : items}        \r\n                    completeTodo={completeTodo}\r\n                    removeTodo={removeTodo}\r\n                    updateTodo={updateTodo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import Todo from './components/Todo'\r\n\r\nfunction App() {\r\n  return (\r\n  <div className=\"todo-app\">\r\n    <Todo/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}