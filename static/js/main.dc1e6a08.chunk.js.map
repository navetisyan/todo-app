{"version":3,"sources":["components/TodoForm.js","components/TodoList.js","components/SearchBar.js","components/Todo.js","App.js","index.js"],"names":["TodoForm","props","useState","value","input","setInput","className","onSubmit","e","preventDefault","id","Math","floor","random","text","isComplete","type","placeholder","name","onChange","target","TodoList","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","checked","onClick","SearchBar","term","setTerm","useEffect","handle","setTimeout","clearTimeout","Todo","items","setItems","queryItems","setQueryItems","item","trim","length","newList","foundItems","filter","includes","updatedItems","newValue","prev","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAqCeA,MAnCf,SAAkBC,GAAQ,IAAD,EAEKC,mBAASD,EAAME,MAAQF,EAAME,MAAO,IAFzC,mBAEdC,EAFc,KAEPC,EAFO,KAmBrB,OACI,8BACI,uBAAMC,UAAU,YAAYC,SAjBhB,SAACC,GACjBA,EAAEC,iBAEFR,EAAMM,SAAS,CACXG,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMV,EACNW,YAAY,IAEhBV,EAAS,KASL,UACI,uBACQW,KAAK,OACLC,YAAY,WACZd,MAAOC,EACPc,KAAK,OACLZ,UAAU,aACVa,SAbC,SAACX,GAClBH,EAASG,EAAEY,OAAOjB,UAaV,wBAAQG,UAAU,cAAlB,4BCEDe,MA9Bf,YAAkE,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAAa,EAErCvB,mBAAS,CAACQ,GAAG,KAAMP,MAAO,KAFW,mBAEtDuB,EAFsD,KAEhDC,EAFgD,KAa7D,OAAID,EAAKhB,GACE,cAAC,EAAD,CAAUgB,KAAMA,EAAMnB,SAVZ,SAAAJ,GACjBsB,EAAWC,EAAKhB,GAAIP,GACpBwB,EAAQ,CACNjB,GAAI,KACJP,MAAO,MAM4CA,MAAOuB,EAAKvB,QAG9DmB,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACT,sBAAiBxB,UAAWuB,EAAKd,WAAa,oBAAqB,WAAnE,UACQ,sBAAoBT,UAAW,OAA/B,UACI,uBAAOU,KAAK,WAAWN,GAAImB,EAAKnB,GAAIQ,KAAMW,EAAKnB,GAAIqB,QAASF,EAAKd,WAAYI,SAAU,kBAAMI,EAAaM,EAAKnB,OAC9GmB,EAAKf,OAFAe,EAAKnB,IAIf,wBAAQJ,UAAU,mBAAmB0B,QAAS,kBAAKL,EAAQ,CAACjB,GAAImB,EAAKnB,GAAIP,MAAO0B,EAAKf,QAArF,oBACA,qBAAKR,UAAU,mBAAmB0B,QAAS,kBAAKR,EAAWK,EAAKnB,KAAhE,iBANEoB,OCaPG,MAhCf,SAAmBhC,GAAQ,IAAD,EAEAC,mBAAS,IAFT,mBAEjBgC,EAFiB,KAEXC,EAFW,KAkBtB,OAdFC,qBAAU,WAER,IAAMC,EAASC,YAAW,WACxBrC,EAAMM,SAAS2B,KACf,KAEF,OAAO,WACLK,aAAaF,MAId,CAACH,IAIA,qBAAK5B,UAAU,cAAf,SACI,qBAAKA,UAAU,QAAf,SACE,uBACEU,KAAK,OACLC,YAAY,sBACZE,SAAU,SAACX,GAAD,OAAO2B,EAAQ3B,EAAEY,OAAOjB,eCpBjC,SAASqC,IAAQ,IAAD,EAEDtC,mBAAS,IAFR,mBAEpBuC,EAFoB,KAEbC,EAFa,OAGUxC,mBAASuC,GAHnB,mBAGpBE,EAHoB,KAGRC,EAHQ,KA4C3B,OACI,gCACI,+CACA,sBAAKtC,UAAU,YAAf,UACI,cAAC,EAAD,CAAUC,SA3CN,SAACsC,GACb,GAAIA,EAAK/B,MAAS+B,EAAK/B,KAAKgC,OAAOC,OAAnC,CAGA,IAAMC,EAAO,CAAIH,GAAJ,mBAAaJ,IAC1BC,EAASM,OAuCD,cAAC,EAAD,CAAWzC,SAXA,SAAC2B,GACpB,IAAIe,EAAc,YAAIR,GAAOS,QAAO,SAACL,GAAD,OAAUA,EAAK/B,KAAKqC,SAASjB,MACjEU,EAAcK,SAWV,cAAC,EAAD,CACQ3B,MAAOqB,EAAWI,OAASJ,EAAaF,EACxClB,aAvCK,SAACb,GAClB,IAAI0C,EAAeX,EAAMb,KAAI,SAAAiB,GAIzB,OAHGA,EAAKnC,KAAOA,IACXmC,EAAK9B,YAAc8B,EAAK9B,YAErB8B,KAGXH,EAASU,IAgCG5B,WA7BG,SAACd,GAChB,IAAI0C,EAAe,YAAIX,GAAOS,QAAO,SAAAL,GAAI,OAAIA,EAAKnC,KAAOA,KACzDgC,EAASU,IA4BG3B,WAzBG,SAACf,EAAI2C,GAChBA,EAASvC,MAASuC,EAASvC,KAAKgC,OAAOC,QAI3CL,GAAS,SAACY,GAAD,OAAUA,EAAK1B,KAAK,SAAAiB,GAAS,OAAOA,EAAKnC,KAAOA,EAAK2C,EAAWR,cC/BlEU,MARf,WACE,OACA,qBAAKjD,UAAU,WAAf,SACE,cAACkC,EAAD,OCAJgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dc1e6a08.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nfunction TodoForm(props) {\n\n    const [input, setInput] = useState(props.value ? props.value: '');\n    \n    const addTodoItem = (e) => {\n        e.preventDefault();    \n\n        props.onSubmit({\n            id: Math.floor(Math.random() * 1000),\n            text: input, \n            isComplete: false\n        });\n        setInput('');\n    }\n\n    const handleChange = (e) => { \n        setInput(e.target.value)\n    }\n\n    return (\n        <div>\n            <form className=\"todo-form\" onSubmit={addTodoItem}>\n                <input \n                        type=\"text\"\n                        placeholder=\"Add Todo\" \n                        value={input} \n                        name='text' \n                        className=\"todo-input\"\n                        onChange={handleChange}/>\n                <button className=\"todo-button\">Add Todo</button>\n            </form>\n        </div>\n    )\n}\n\nexport default TodoForm\n","import React, {useState} from 'react'\nimport TodoForm from './TodoForm'\n\nfunction TodoList({todos, completeTodo, removeTodo, updateTodo}) {\n\n    const [edit, setEdit] = useState({id:null, value: ''});\n\n    const submitUpdate = value => {\n        updateTodo(edit.id, value);\n        setEdit({\n          id: null,\n          value: ''\n        });\n      };\n\n\n    if (edit.id) {\n        return <TodoForm edit={edit} onSubmit={submitUpdate} value={edit.value} />;\n      }\n\n    return todos.map((todo, index) => (\n            <div key={index} className={todo.isComplete ? \"todo-row complete\": \"todo-row\"} >\n                    <div key={todo.id}  className =\"icon\">\n                        <input type=\"checkbox\" id={todo.id} name={todo.id} checked={todo.isComplete} onChange={() => completeTodo(todo.id)}/>\n                        {todo.text}\n                    </div>\n                    <button className='update-icon icon' onClick={()=> setEdit({id: todo.id, value: todo.text }) }>Update</button>\n                    <div className='remove-icon icon' onClick={()=> removeTodo(todo.id)}>x</div>\n                </div>\n                )\n            )\n}\n\nexport default TodoList;","import React, {useState, useEffect} from 'react'\n\nfunction SearchBar(props) {\n\n  const [term, setTerm] = useState('');\n\n  useEffect(()=> {\n\n    const handle = setTimeout(()=> {\n      props.onSubmit(term);\n    },2000);\n\n    return () => {\n      clearTimeout(handle);\n    }\n\n\n  }, [term]);\n\n\n    return (\n      <div className=\"search-form\">\n          <div className=\"field\">\n            <input\n              type=\"text\"\n              placeholder=\"Search in Todo list\" \n              onChange={(e) => setTerm(e.target.value)}\n            />\n          </div>\n      </div>\n    );\n\n}\n\nexport default SearchBar;\n","import React, {useState} from 'react'\nimport TodoForm from './TodoForm'\nimport TodoList from './TodoList'\nimport SearchBar from './SearchBar'\n\n\nexport default function Todo() {\n\n    const [items, setItems] = useState([]);\n    const [queryItems, setQueryItems] =  useState(items);\n\n    const addItem = (item) => {\n        if(!item.text || !item.text.trim().length){\n            return;\n        }\n        const newList = [item, ...items];\n        setItems(newList);\n\n    }\n\n    const completeTodo = (id) => {\n        let updatedItems = items.map(item => {\n            if(item.id === id){\n                item.isComplete = !item.isComplete;\n            }\n            return item;\n        })\n\n        setItems(updatedItems);\n    }\n\n    const removeTodo = (id) => {\n        let updatedItems = [...items].filter(item => item.id !== id);\n        setItems(updatedItems);\n    }\n\n    const updateTodo = (id, newValue) => {\n        if(!newValue.text || !newValue.text.trim().length){\n            return;\n        }\n\n        setItems((prev) => prev.map( item => {return item.id === id ? newValue : item}));\n    }\n\n    const onSearchSubmit = (term) => {\n        let foundItems  = [...items].filter((item) => item.text.includes(term));   \n        setQueryItems(foundItems);\n      };\n\n\n    return (\n        <div>\n            <h1>Todo Reminder</h1>\n            <div className=\"todo-menu\">\n                <TodoForm onSubmit = {addItem}/ >\n                <SearchBar onSubmit={onSearchSubmit}/>\n            </div>\n            <TodoList \n                    todos={queryItems.length ? queryItems : items}        \n                    completeTodo={completeTodo}\n                    removeTodo={removeTodo}\n                    updateTodo={updateTodo}\n            />\n        </div>\n    )\n}\n","import Todo from './components/Todo'\n\nfunction App() {\n  return (\n  <div className=\"todo-app\">\n    <Todo/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}